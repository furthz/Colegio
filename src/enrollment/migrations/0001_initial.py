# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2017-07-22 20:08
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
                     ('register','0002_register'),
    ]

    operations = [
        migrations.CreateModel(
            name='TipoServicio',
            fields=[
                ('id_tipo_servicio', models.AutoField(primary_key=True, serialize=False)),
                ('colegio', models.ForeignKey(db_column='id_colegio', to='register.Sucursal')),
                ('is_ordinario', models.BooleanField()),
                ('nivel', models.IntegerField(blank=True, null=True)),
                ('grado', models.IntegerField(blank=True, null=True)),
                ('extra', models.CharField(blank=True, max_length=50, null=True)),
                ('codigo_modular', models.CharField(max_length=10,blank=True, null=True)),
                ('fecha_creacion', models.DateField()),
                ('fecha_modificacion', models.DateField()),
                ('usuario_creacion', models.CharField(max_length=10,null=True)),
                ('usuario_modificacion', models.CharField(max_length=10,null=True)),
                ('activo', models.BooleanField()),
            ],
            options={
                #'db_table': 'tipo_servicio',
                'managed': settings.IS_MIGRATE,
                #'managed': False,
                'permissions': (
                    ("Cargar_Tipo_Servicio_Create", "cargar tipo de servicio"),
                    ("Tipo_Servicio_Regular_Create", "cargar tipo de servicio regular"),
                    ("Tipo_Servicio_Extra_Create", "cargar tipo de servicio extra"),
                    ("Tipo_Servicio_Detail", "cargar detalle de tipo de servicio "),
                    ("Tipo_Servicio_Regular_End_Update", "actualizar tipo de servicio regular end"),
                    ("Tipo_Servicio_Extra_End_Update", "actualizar tipo de servicio extra end"),
                    ("Tipo_Servicio_Regular_Update", "actualizar tipo de servicio regular"),
                    ("Tipo_Servicio_Extra_Update", "actualizar tipo de servicio extra"),
                    ("Tipo_Servicio_Delete", "borrar tipo de servicio"),
                    ("Tipo_Servicio_List", "listar tipo de servicio"),
                )
            },
        ),
        migrations.CreateModel(
            name='Servicio',
            fields=[
                ('id_servicio', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=100)),
                ('precio', models.FloatField()),
                ('is_periodic', models.BooleanField()),
                ('fecha_facturar', models.DateField()),
                ('cuotas', models.IntegerField()),
                ('fecha_creacion', models.DateField()),
                ('fecha_modificacion', models.DateField()),
                ('usuario_creacion', models.CharField(max_length=10,null=True)),
                ('usuario_modificacion', models.CharField(max_length=10,null=True)),
                ('tipo_servicio', models.ForeignKey(db_column='id_tipo_servicio', to='enrollment.TipoServicio')),
                ('activo', models.BooleanField()),
            ],
            options={
                #'db_table': 'servicio',
                'managed': settings.IS_MIGRATE,
                #'managed': False,
                'permissions' : (
                    ("Servicio_Regular_Create", "crear un servicio regular"),
                    ("Servicio_Extra_Create", "crear un servicios extra"),
                    ("Servicio_Detail", "ver un detalle de servicio"),
                    ("Servicio_Regular_End_Update", "actualizar un servicio regular end"),
                    ("Servicio_Extra_End_Update", "actualizar un servicio extra end"),
                    ("Servicio_Regular_Update", "actualizar un servicio regular"),
                    ("Servicio_Extra_Update", "actualizar un servicio extra"),
                    ("Servicio_Delete", "borrar un srvicio"),
                    ("Servicio_List", "listar un servicio"),
                )
            },
        ),
        migrations.CreateModel(
            name='Matricula',
            fields=[
                ('id_matricula', models.AutoField(primary_key=True)),
                ('alumno', models.ForeignKey(db_column='id_alumno',to='register.Alumno')),
                ('colegio', models.ForeignKey(db_column='id_colegio', to='register.Sucursal')),
                ('tipo_servicio', models.ForeignKey(db_column='id_tipo_servicio',to='enrollment.TipoServicio')),
                ('fecha_creacion', models.DateField()),
                ('fecha_modificacion', models.DateField()),
                ('usuario_creacion', models.CharField(max_length=10, null=True)),
                ('usuario_modificacion', models.CharField(max_length=10, null=True)),
                ('activo', models.BooleanField()),
            ],
            options={
                #'db_table': 'matricula',
                'managed': settings.IS_MIGRATE,
                # 'managed': False,
                'permissions': (
                    ("Matricula_Create", "crear una matricula"),
                    ("Cargar_Matricula_Create", "cargar una matricula"),
                    ("Matricula_Detail", "detalles de matricula"),
                    ("Matricula_Update", "matricula update"),
                    ("Cargar_Matricula_Update", "cargar matricula update"),
                    ("Matricula_Delete", "borrar matricula"),
                    ("Matricula_List", "listar matricula")
                )
            },
        ),
        migrations.CreateModel(
            name='Cuentascobrar',
            fields=[
                ('id_cuentascobrar', models.AutoField(primary_key=True)),
                ('matricula', models.ForeignKey(db_column='id_matricula', to='enrollment.Matricula')),
                ('servicio', models.ForeignKey(db_column='id_servicio', to='enrollment.Servicio')),
                ('fecha_ven', models.DateField()),
                ('comentario', models.CharField(max_length=500, blank=True, null=True)),
                ('estado', models.BooleanField()),
                ('precio', models.FloatField()),
                ('deuda', models.FloatField()),
                ('descuento', models.FloatField()),
                ('fecha_creacion', models.DateField()),
                ('fecha_modificacion', models.DateField()),
                ('usuario_creacion', models.CharField(max_length=10, null=True)),
                ('usuario_modificacion', models.CharField(max_length=10, null=True)),
                ('activo', models.BooleanField()),
            ],
            options={
                #'db_table': 'cuentascobrar',
                'managed': settings.IS_MIGRATE,
                'permissions': (
                    ('control_ingresos_padres', 'Para el control de ingresos de los padres'),
                    ('control_ingresos_promotor', 'Para el control de ingresos del promotor'),
                    ('control_ingresos_promotor_detalle', 'Para el detalle de control de ingresos del promotor'),
                )
            },
        ),
    ]

